{{#if permissions.roles.hasView}}
<style>
    .center-div {
        width: 600px;
        background: #fff;
        margin: 50px auto;
        padding: 20px;
    }

    .error {
        color: red !important;
    }

    .table-actions {
        font-size: 16px;
        color: #333;
        margin: 0 5px;
    }
</style>
{{#if error}}
    <div id="error" class="alert alert-danger" style="margin-top: 25px;">{{errMessage}}</div>
{{/if}}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">Lista de Roles</h4>
    </div>
    <div class="col-md-7 align-self-center text-right">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active">Lista de Roles</li>
            </ol>
            {{#if permissions.roles.hasCreate}}
            <a href="/dashboard/roles/create">
                <button type="button" class="btn btn-dark m-l-15"><i class="fa fa-plus-circle"></i>&nbsp;Crear
                    Roles
                </button>
            </a>
            {{/if}}
        </div>
    </div>
</div>
<div class="col-lg-12">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Lista de Roles</h4>
            <!-- <h6 class="card-subtitle">Add class <code>.color-table .dark-table</code></h6> -->
            <div class="table-responsive">
                <table class="table color-table dark-table table-datatable">
                    <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Organization</th>
                        <th>Components</th>
                        <th>CreatedBy</th>
                        <th>CreatedAt</th>
                        <th class="noExport">Options</th>
                    </tr>
                    </thead>
                    <tbody>
                    {{#each initialInfo.roleList}}
                        <tr>
                            <td>{{id}}</td>
                            <td>{{roleName}}</td>
                            <td>{{ organization }}</td>
                            <td>comps</td>
                            <td>{{createdBy}}</td>
                            <td>{{createdAt}}</td>
                            <td>
                            {{#if ../permissions.roles.hasCreate}}
                                <a href="/dashboard/roles/edit/{{id}}" class="table-actions edit" data-toggle="tooltip"
                                   data-original-title="Editar"><i class="ti-marker-alt"></i></a>
                            {{/if}}
                            {{#if ../permissions.roles.hasDelete}}
                                <a href="#" class="table-actions delete" data-id="{{id}}"
                                   data-toggle="tooltip" data-original-title="Eliminar"><i class="ti-close"></i></a>
                            {{/if}}
                            </td>
                        </tr>
                    {{else}}
                        <tr>
                            <td colspan="5">No hay roles para mostrar</td>
                        </tr>
                    {{/each}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    $('body').on('click', '.delete', function (e) {
        let deleteId = $(this).attr("data-id");
        e.preventDefault();
        Swal.fire({
            title: "¿Quieres eliminar este role?",
            text: "Esta acción será permanente y no podrá ser revertida",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si!'
        }).then((result) => {
            if (result.value) {
                $.get("/dashboard/roles/delete/" + deleteId)
                        .done(function (data) {
                            toastr.success('Eliminado exitosamente', function () {
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            })
                        })
                        .fail(function (e) {
                            toastr.error('Technical Error', function () {
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            });
                            console.log("error", e);
                        })
            }
        })
    });
    $('body').on('change', '.updateStatus', function (e) {
        let roleId = $(this).attr("data-perm-id");
        let accessType = $(this).attr("data-perm-type");
        let checkedStatus = 0;
        if ($(this).prop('checked') === true) {
            checkedStatus = 1;
        }
        e.preventDefault();
        Swal.fire({
            title: "¿Quieres actualizar el estado?",
            text: "Esta acción será permanente y no podrá ser revertida",
            icon: "success",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si!'
        }).then((result) => {
            if (result.value) {
                $.post("/dashboard/roles/updaterolestatus",
                        {
                            roleId: roleId,
                            accessType: accessType,
                            checkedStatus: checkedStatus
                        })
                        .done(function (data) {
                            toastr.success('Eliminado exitosamente', function () {
                                location.reload();
                            })
                        })
                        .fail(function (e) {
                            toastr.error('Technical Error', function () {
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            });
                            console.log("error", e);
                        })
            }
        })
    });
</script>
{{/if}}
